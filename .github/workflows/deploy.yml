name: Build and deploy

# Update every time we push to the main branch
on:
  push:
    branches:
    - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Start SSH agent
      uses: webfactory/ssh-agent@v0.4.1
      with:
        ssh-private-key: ${{ secrets.SURVEYSITE_SSH_KEY }}

    - name: Create GitHub deployment
      uses: chrnorm/deployment-action@v1.0.0
      id: github_deployment
      with:
        token: ${{ github.token }}
        target_url: https://survey.r-anime.moe
        environment: production

    - name: Pull latest changes to server
      run: |
        ssh -o StrictHostKeyChecking=no surveysite@survey.r-anime.moe /bin/bash << 'EOF'
          # Causes this script to exit early and report a failure if any command errors
          set -e

          # Checkout latest changes from our repo, overwriting any local changes
          cd "$HOME/surveysite"
          git fetch --all
          git reset --hard origin/main

          # Use our virtualenv
          source env/bin/activate

          # Install dependencies
          pip install -r requirements.txt

          # Run migrations, pulling environment variables from the .env file
          eval $(cat .env) python manage.py migrate

          # Compile static Sass files
          eval $(cat .env) python manage.py sass survey/static/survey/scss/ survey/static/survey/css/

          # Collect all static files into STATIC_ROOT
          eval $(cat .env) python manage.py collectstatic --noinput

          # Restart the service to make the new stuff go live
          sudo systemctl restart surveysite.service
        EOF

    - name: Update deployment status (success)
      if: success()
      uses: chrnorm/deployment-status@v1.0.0
      with:
        token: ${{ github.token }}
        state: success
        deployment_id: ${{ steps.github_deployment.outputs.deployment_id }}

    - name: Update deployment status (failure)
      if: failure()
      uses: chrnorm/deployment-status@v1.0.0
      with:
        token: ${{ github.token }}
        state: failure
        deployment_id: ${{ steps.github_deployment.outputs.deployment_id }}
